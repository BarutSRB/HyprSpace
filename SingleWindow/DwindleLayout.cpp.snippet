// File: src/layout/DwindleLayout.cpp
// Function: CDwindleLayout::applyNodeDataToWindow()
// Lines: 206-228
//
// This code implements the single_window_aspect_ratio feature for the dwindle layout.
// It calculates padding to enforce a specific aspect ratio when only a single window
// is present on a workspace.

const static auto REQUESTEDRATIO          = CConfigValue<Hyprlang::VEC2>("dwindle:single_window_aspect_ratio");
const static auto REQUESTEDRATIOTOLERANCE = CConfigValue<Hyprlang::FLOAT>("dwindle:single_window_aspect_ratio_tolerance");

Vector2D          ratioPadding;

if ((*REQUESTEDRATIO).y != 0 && !pNode->pParent) {
    // Calculate the monitor's available size (excluding reserved areas for bars, etc.)
    const Vector2D originalSize = PMONITOR->m_size - PMONITOR->m_reservedTopLeft - PMONITOR->m_reservedBottomRight;

    // Calculate both the requested aspect ratio and the monitor's current ratio
    const double   requestedRatio = (*REQUESTEDRATIO).x / (*REQUESTEDRATIO).y;
    const double   originalRatio  = originalSize.x / originalSize.y;

    if (requestedRatio > originalRatio) {
        // Requested ratio is wider than monitor - add vertical padding
        double padding = originalSize.y - (originalSize.x / requestedRatio);

        // Only apply if padding exceeds tolerance threshold (prevents tiny adjustments)
        if (padding / 2 > (*REQUESTEDRATIOTOLERANCE) * originalSize.y)
            ratioPadding = Vector2D{0., padding};
    } else if (requestedRatio < originalRatio) {
        // Requested ratio is taller than monitor - add horizontal padding
        double padding = originalSize.x - (originalSize.y * requestedRatio);

        // Only apply if padding exceeds tolerance threshold
        if (padding / 2 > (*REQUESTEDRATIOTOLERANCE) * originalSize.x)
            ratioPadding = Vector2D{padding, 0.};
    }
}

// Later in the function (lines 234-235), the padding is applied:
// calcPos  = calcPos + GAPOFFSETTOPLEFT + ratioPadding / 2;
// calcSize = calcSize - GAPOFFSETTOPLEFT - GAPOFFSETBOTTOMRIGHT - ratioPadding;
//
// This centers the window by adding half the padding to the position
// and removing the full padding from the size.
